package main

import (
	"log"
	"time"

	"github.com/thinkgos/aliIOT/ahttp"
	"github.com/thinkgos/aliIOT/infra"
	"github.com/thinkgos/aliIOT/model"
)

const (
	productKey    = "a1iJcssSlPC"
	productSecret = "lw3QzKHNfh7XvOxO"
	deviceName    = "dyncreg"
	deviceSecret  = "irqurH8zaIg1ChoeaBjLHiqBXEZnlVq8"
)

// 透传
func main() {
	var err error

	client := ahttp.New()
	client.
		SetDeviceMetaInfo(productKey, deviceName, deviceSecret).
		SetSignMethod(infra.SignMethodHMACSHA1).LogMode(true)
	//err = client.SendAuth()
	//if err != nil {
	//	panic(err)
	//}
	bPayload := []byte{0x0, 0x0, 0x8, 0x0, 0x0, 0x56, 0x32, 0x32, 0x32, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x47, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x4d, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x41, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x0, 0x1, 0x0, 0x2, 0x0, 0x3, 0x0, 0x4, 0x0, 0x5, 0x0, 0x6, 0x0, 0x7, 0x0, 0x8, 0x0, 0xf, 0x42, 0x40, 0x1, 0x2, 0x3, 0xc, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14, 0x1, 0x2d, 0x1, 0x2e, 0x1, 0x2f, 0x1, 0x30, 0x1, 0x31, 0x1, 0x32, 0x1, 0x33, 0x1, 0x34, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb, 0xc, 0xd, 0x3, 0xe9, 0x3, 0xea, 0x3, 0xeb, 0xd, 0x6e, 0xb, 0xc, 0xd, 0xe, 0xf, 0x3, 0xeb, 0x3, 0xeb, 0x10, 0x11, 0x12, 0x13, 0x14, 0xfc, 0x16, 0xfc, 0x15, 0x10, 0x11, 0x12, 0x13, 0x14, 0x10, 0x11, 0x12, 0x13, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0xe, 0xf, 0x2, 0x0, 0xb, 0xc, 0xd, 0xe, 0xf, 0x3, 0xe8, 0x10, 0x11, 0x12, 0x13, 0x14, 0x0, 0x10, 0x11, 0x12, 0x13, 0x14, 0xa, 0x10, 0x11, 0x12, 0x13, 0x14, 0x0, 0x1, 0x2, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x3, 0xe6, 0x3, 0xe7, 0x60, 0x61, 0x62, 0x63, 0x64, 0x3, 0xe7, 0x60, 0x61, 0x62, 0x63, 0x64, 0x0, 0x0, 0x0, 0x64, 0x7, 0x0, 0x0, 0x0, 0x64, 0x0, 0x64, 0x1, 0x91, 0x1, 0x91, 0x1, 0x91, 0x1, 0x91, 0x1, 0x91, 0x1, 0x91, 0x1, 0x91, 0x1, 0x91, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64}
	//bPayload := []byte(`000000000056313233343536373839616263646566473132333435363738396162636465664d3132333435363738396162636465664131323334353637383961626364656600010002000300040005000600070008000f42400102030c6f707172737475760b0c0d0e0f1011121314012d012e012f013001310132013301345b5c5d5e5f606162636401ffffffffffff0b0c0d03e903ea03eb0d6e0b0c0d0e0f03eb03eb1011121314fc16fc151011121314101112135b5c5d5e5f60616263640e0f02000b0c0d0e0f03e810111213140010111213140a10111213140001025b5c5d5e5f03e603e7606162636403e7606162636400000064070000006400640191019101910191019101910191019165666768696a6b6c5b5c5d5e5f60616263645b5c5d5e5f6061626364`)

	for {
		err = client.SendData(model.URIService(model.URISysPrefix, model.URIThingModelUpRaw,
			productKey, deviceName), bPayload)
		if err != nil {
			log.Println(err)
		} else {
			log.Println("success")
		}
		time.Sleep(time.Second * 10)
	}
}
